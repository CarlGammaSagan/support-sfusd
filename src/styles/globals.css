@tailwind base;
@tailwind components;
@tailwind utilities;

body,
body * {
  font-family: var(--font-lato), sans-serif;
}

body {
}

h1,
h2,
h3,
h4,
h5,
h6,
h1 *,
h2 *,
h3 *,
h4 *,
h5 *,
h6 * {
  font-family: var(--font-fredoka), sans-serif;
}

.map-popup {
  border-radius: 25px;
}

.marker {
  background-image: url("/marker.svg");
  background-size: cover;
  width: 45px;
  height: 45px;
  border-radius: 0;
  cursor: pointer;
}

.marker:hover {
  background-image: url("/marker_hover.svg");
}

.marker-selected {
  background-image: url("/marker_select.svg");
  background-size: cover;
  width: 45px;
  height: 45px;
  border-radius: 0;
  cursor: pointer;
}

/* .marker:active, .marker:focus {
  background-image: url("/marker_selected.svg");
} */

.marker-selected {
  background-image: url("/marker_selected.svg");
  background-size: cover;
  width: 45px;
  height: 45px;
  border-radius: 0;
  cursor: pointer;
}

.golden-gate-marker {
  background-image: url("/GoldenGate.png");
  background-size: cover;
  width: 60px;
  height: 60px;
  cursor: pointer;
}

.bay-bridge-marker {
  background-image: url("/BayBridge.png");
  background-size: cover;
  width: 60px;
  height: 60px;
  cursor: pointer;
}

.delay-100 {
  transition-delay: 100ms;
}
.delay-200 {
  transition-delay: 200ms;
}
.delay-300 {
  transition-delay: 300ms;
}
.delay-400 {
  transition-delay: 400ms;
}
.delay-500 {
  transition-delay: 500ms;
}
.delay-600 {
  transition-delay: 600ms;
}
.delay-800 {
  transition-delay: 800ms;
}
.delay-1000 {
  transition-delay: 1000ms;
}
.delay-1200 {
  transition-delay: 1200ms;
}
.delay-1400 {
  transition-delay: 1400ms;
}
.delay-1600 {
  transition-delay: 1600ms;
}
.delay-2000 {
  transition-delay: 2000ms;
}
.delay-2400 {
  transition-delay: 2400ms;
}
.delay-2800 {
  transition-delay: 2800ms;
}
.delay-3200 {
  transition-delay: 3200ms;
}

input:checked + .slider {
  -webkit-transform: translateX(100%);
  -ms-transform: translateX(100%);
  transform: translateX(100%);
}

/* fix for browsers like mobile Safari not
playing well with `vh`
(see: https://stackoverflow.com/questions/75079019/tailwind-css-fallback-for-new-screen-length-types-such-as-lvh-svh, https://dev.to/frehner/css-vh-dvh-lvh-svh-and-vw-units-27k4, https://github.com/tailwindlabs/tailwindcss/discussions/8216, https://github.com/tailwindlabs/tailwindcss/pull/11317) */

.min-h-dvh-with-fallback {
  min-height: 100vh; /* Fallback */
  min-height: 100dvh;
}
.h-dvh-with-fallback {
  height: 100vh; /* Fallback */
  height: 100dvh;
}
.min-h-svh-with-fallback {
  min-height: 100vh; /* Fallback */
  min-height: 100svh;
}
.h-svh-with-fallback {
  height: 100vh; /* Fallback */
  height: 100svh;
}
.min-h-lvh-with-fallback {
  min-height: 100vh; /* Fallback */
  min-height: 100lvh;
}
.h-lvh-with-fallback {
  height: 100vh; /* Fallback */
  height: 100lvh;
}
